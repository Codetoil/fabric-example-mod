# Automatically build the project and run any configured tests for every push
# and submitted pull request. This can help catch issues that only occur on
# certain platforms or Java versions, and provides a first line of defence
# against bad commits.

name: ci
on: [pull_request, push, release]

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      packages: write
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3
      - name: Validate Gradle Wrapper
        uses: gradle/wrapper-validation-action@v1
      - name: Setup JDK
        uses: actions/setup-java@v3
        with:
          distribution: temurin
          java-version: 17
          cache: gradle
      - name: Build with Gradle
        uses: gradle/gradle-build-action@v2
        with:
          arguments: build
          gradle-version: 7.6
      - name: Capture Artifacts
        uses: actions/upload-artifact@v3
        with:
          name: Build
          path: build/libs/
  publish:
    runs-on: ubuntu-latest
    permissions:
      packages: write
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3
      - name: Validate Gradle Wrapper
        uses: gradle/wrapper-validation-action@v1
      - name: Setup JDK
        uses: actions/setup-java@v3
        with:
          distribution: temurin
          java-version: 17
          cache: gradle
      - name: Build with Gradle
        uses: gradle/gradle-build-action@v2
        with:
          arguments: publish
          gradle-version: 7.6
        env:
          USERNAME: ${{ github.actor }}
          TOKEN: ${{ secrets.GITHUB_TOKEN }}
          COMMIT_SHA: ${{ github.sha }}
  test:
    strategy:
      matrix:
        dist: [
          temurin,
          zulu,
          liberica,
          microsoft
        ]
        # Use these Java versions
        java: [
          17,    # Current LTS version of Java & minimum supported by Minecraft
          18,
          19
        ]
        # and run on both Linux and Windows
        os: [ubuntu-latest, windows-latest]
      fail-fast: false
    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3
      - name: Validate Gradle Wrapper
        uses: gradle/wrapper-validation-action@v1
      - name: Setup JDK ${{ matrix.dist }}-${{ matrix.java }}
        uses: actions/setup-java@v2
        with:
          distribution: ${{ matrix.dist }}
          java-version: ${{ matrix.java }}
          cache: gradle
      - name: Test with Gradle
        uses: gradle/gradle-build-action@v2
        with:
          arguments: test
          gradle-version: 7.6
      - name: Publish Test Report
        uses: mikepenz/action-junit-report@v3
        if: always() # always run even if the previous step fails
        with:
          report_paths: '**/build/test-results/test/TEST-*.xml'
      - name: Capture Artifacts
        uses: actions/upload-artifact@v3
        with:
          name: Test Results ${{ runner.os }} ${{ matrix.dist }} java ${{matrix.java}}
          path: |
            gametest
            build
